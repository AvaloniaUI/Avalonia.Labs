<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ui="clr-namespace:Avalonia.Labs.Controls"
                    x:CompileBindings="True">
  <Design.PreviewWith>
    <Border Padding="50">
      <ui:ContentDialog Title="Title"
                        Content="Content goes here"
                        />
    </Border>
  </Design.PreviewWith>

  <ControlTheme x:Key="{x:Type ui:ContentDialog}" TargetType="ui:ContentDialog">
    <Setter Property="Foreground" Value="{DynamicResource ContentDialogForeground}"/>
    <Setter Property="Background" Value="{DynamicResource ContentDialogBackground}"/>
    <Setter Property="BorderBrush" Value="{DynamicResource ContentDialogBorderBrush}"/>
    <Setter Property="BorderThickness" Value="{DynamicResource ContentDialogBorderWidth}" />
    <Setter Property="CornerRadius" Value="{DynamicResource OverlayCornerRadius}" />
    <Setter Property="Template">
      <ControlTemplate>
        <Border Name="Container">
          <Panel Name="LayoutRoot"
                 Background="{DynamicResource ContentDialogSmokeFill}">
            <Border Name="BackgroundElement"
                    Background="{TemplateBinding Background}"
                    BorderThickness="{StaticResource ContentDialogBorderWidth}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    CornerRadius="{TemplateBinding CornerRadius}"
                    MinWidth="{DynamicResource ContentDialogMinWidth}"
                    MaxWidth="{DynamicResource ContentDialogMaxWidth}"
                    MinHeight="{DynamicResource ContentDialogMinHeight}"
                    MaxHeight="{DynamicResource ContentDialogMaxHeight}"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    BoxShadow="0 8 32 0 #66000000" >
              <!-- Even in WinUI, shadow is always black regardless of light/dark mode -->

              <!-- if this border isn't here, dialog space displays outside of corner radius at top
                                 if we put ClipToBounds=True on BackgroundElement above, it clips the shadow -->
              <Border ClipToBounds="True"
                      CornerRadius="{TemplateBinding CornerRadius}">
                <Grid Name="DialogSpace" ClipToBounds="True"
                  RowDefinitions="*,Auto">
                  <ScrollViewer Name="ContentScrollViewer"
                                HorizontalScrollBarVisibility="Disabled"
                                VerticalScrollBarVisibility="Auto">
                    <Border Background="{DynamicResource ContentDialogTopOverlay}"
                            Padding="{DynamicResource ContentDialogPadding}"
                            BorderThickness="{StaticResource ContentDialogSeparatorThickness}"
                            BorderBrush="{DynamicResource ContentDialogSeparatorBorderBrush}">
                      <Grid RowDefinitions="Auto,*" >
                        <Grid.Styles>
                          <!--Make sure text wrapping is on-->
                          <Style Selector="TextBlock">
                            <Setter Property="TextWrapping" Value="Wrap"/>
                          </Style>
                        </Grid.Styles>
                        <ContentPresenter Name="PART_TitlePresenter"
                                          Margin="{StaticResource ContentDialogTitleMargin}"
                                          Content="{TemplateBinding Title}"
                                          ContentTemplate="{TemplateBinding TitleTemplate}"
                                          FontSize="20"
                                          FontFamily="Default"
                                          FontWeight="SemiBold"
                                          Foreground="{TemplateBinding Foreground}"
                                          HorizontalAlignment="Left"
                                          VerticalAlignment="Top" />

                        <ContentPresenter Name="PART_ContentPresenter"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          Content="{TemplateBinding Content}"
                                          FontSize="{StaticResource ControlContentThemeFontSize}"
                                          FontFamily="{StaticResource ContentControlThemeFontFamily}"
                                          Foreground="{TemplateBinding Foreground}"
                                          Grid.Row="1"/>
                      </Grid>
                    </Border>
                  </ScrollViewer>

                  <Border Padding="{StaticResource ContentDialogPadding}"
                          Grid.Row="1"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Bottom"
                          Background="{TemplateBinding Background}">
                    <Grid Name="CommandSpace">
                      <!--
                                            B/C we can't target Row/Column defs in Styles like WinUI
                                            this still uses the old Col defs, but it works the same
                                            way in the end...
                                            -->
                      <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="0.5*" />
                        <ColumnDefinition Width="0.5*" />
                        <ColumnDefinition Width="*" />
                      </Grid.ColumnDefinitions>
                      <Button Name="PART_PrimaryButton"
                              Content="{TemplateBinding PrimaryButtonText}"
                              IsEnabled="{TemplateBinding IsPrimaryButtonEnabled}"
                              Command="{TemplateBinding PrimaryButtonCommand}"
                              CommandParameter="{TemplateBinding PrimaryButtonCommandParameter}"
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Stretch"
                              HorizontalContentAlignment="Center"
                              VerticalContentAlignment="Center"
                              IsVisible="False" />

                      <Button Name="PART_SecondaryButton"
                              Content="{TemplateBinding SecondaryButtonText}"
                              IsEnabled="{TemplateBinding IsSecondaryButtonEnabled}"
                              Command="{TemplateBinding SecondaryButtonCommand}"
                              CommandParameter="{TemplateBinding SecondaryButtonCommandParameter}"
                              HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                              HorizontalContentAlignment="Center"
                              VerticalContentAlignment="Center"
                              IsVisible="False"  />

                      <Button Name="PART_CloseButton"
                              Content="{TemplateBinding CloseButtonText}"
                              Command="{TemplateBinding CloseButtonCommand}"
                              CommandParameter="{TemplateBinding CloseButtonCommandParameter}"
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Stretch"
                              HorizontalContentAlignment="Center"
                              VerticalContentAlignment="Center"
                              IsVisible="False" />
                    </Grid>
                  </Border>
                </Grid>
              </Border>
            </Border>
          </Panel>
        </Border>
      </ControlTemplate>
    </Setter>

    <!--Handle hidden dialog-->
    <Style Selector="^:hidden /template/ Panel#LayoutRoot">
      <Style.Animations>
        <Animation Duration="00:00:00.167" FillMode="Forward">
          <KeyFrame Cue="0%">
            <Setter Property="Opacity" Value="1.0"/>
          </KeyFrame>
          <KeyFrame Cue="100%">
            <Setter Property="Opacity" Value="0.0"/>
            <Setter Property="IsVisible" Value="False" />
          </KeyFrame>
        </Animation>
      </Style.Animations>
    </Style>
    <Style Selector="^:hidden /template/ Border#Container">
      <Style.Animations>
        <Animation Duration="00:00:00.167" FillMode="Forward">
          <KeyFrame Cue="0%">
            <Setter Property="ScaleTransform.ScaleX" Value="1.0"/>
            <Setter Property="ScaleTransform.ScaleY" Value="1.0"/>
          </KeyFrame>
          <KeyFrame Cue="100%" KeySpline="0,0 0,1">
            <Setter Property="ScaleTransform.ScaleX" Value="1.05"/>
            <Setter Property="ScaleTransform.ScaleY" Value="1.05"/>
          </KeyFrame>
        </Animation>
      </Style.Animations>
    </Style>

    <!--Handle open dialog-->
    <Style Selector="^:open /template/ Panel#LayoutRoot">
      <Setter Property="IsVisible" Value="True"/>
      <Style.Animations>
        <!--Animation applies with priority of LocalValue
                 To overrule the IsVisible=False in :hidden, set
                 IsVisible=True in BOTH KeyFrames here-->
        <Animation Duration="00:00:00.250" FillMode="Forward">
          <KeyFrame Cue="0%">
            <Setter Property="IsVisible" Value="True"/>
            <Setter Property="Opacity" Value="0.0"/>
          </KeyFrame>
          <KeyFrame Cue="100%">
            <Setter Property="IsVisible" Value="True"/>
            <Setter Property="Opacity" Value="1.0"/>
          </KeyFrame>
        </Animation>
      </Style.Animations>
    </Style>
    <Style Selector="^:open /template/ Border#Container">
      <Style.Animations>
        <Animation Duration="00:00:00.250" FillMode="Forward">
          <KeyFrame Cue="0%">
            <Setter Property="ScaleTransform.ScaleX" Value="1.05"/>
            <Setter Property="ScaleTransform.ScaleY" Value="1.05"/>
          </KeyFrame>
          <KeyFrame Cue="100%" KeySpline="0,0 0,1">
            <Setter Property="ScaleTransform.ScaleX" Value="1.00"/>
            <Setter Property="ScaleTransform.ScaleY" Value="1.00"/>
          </KeyFrame>
        </Animation>
      </Style.Animations>
    </Style>

    <!--Handle showing smoke layer-->
    <Style Selector="^:nosmokelayer /template/ Panel#LayoutRoot">
      <Setter Property="Background" Value="{x:Null}"/>
    </Style>

    <!--Handle FullDialogSizing-->
    <Style Selector="^:fullsize /template/ Border#BackgroundElement">
      <Setter Property="VerticalAlignment" Value="Stretch"/>
    </Style>


    <!-- Primary Button Only -->
    <Style Selector="^:primary /template/ Button#PART_PrimaryButton">
      <Setter Property="IsVisible" Value="True"/>
      <Setter Property="Grid.Column" Value="2" />
      <Setter Property="Grid.ColumnSpan" Value="2" />
    </Style>
    <Style Selector="^:primary /template/ Button#PART_SecondaryButton, ^:primary /template/ Button#PART_CloseButton">
      <Setter Property="IsVisible" Value="False"/>
    </Style>

    <!-- Secondary Button Only -->
    <Style Selector="^:secondary /template/ Button#PART_SecondaryButton">
      <Setter Property="IsVisible" Value="True"/>
      <Setter Property="Grid.Column" Value="2" />
      <Setter Property="Grid.ColumnSpan" Value="2" />
    </Style>
    <Style Selector="^:secondary /template/ Button#PART_PrimaryButton, ^:secondary /template/ Button#PART_CloseButton">
      <Setter Property="IsVisible" Value="False"/>
    </Style>

    <!-- Close Button Only -->
    <Style Selector="^:close /template/ Button#PART_CloseButton">
      <Setter Property="IsVisible" Value="True"/>
      <Setter Property="Grid.Column" Value="2" />
      <Setter Property="Grid.ColumnSpan" Value="2" />
    </Style>
    <Style Selector="^:close /template/ Button#PART_PrimaryButton, ^:close /template/ Button#PART_SecondaryButton">
      <Setter Property="IsVisible" Value="False"/>
    </Style>

    <!-- Margins are defined by ContentDialogButtonSpacing (8) -->

    <!-- Primary and Secondary -->
    <Style Selector="^:primary:secondary:primary-first /template/ Button#PART_PrimaryButton,
                     ^:primary:secondary:not(:primary-first) /template/ Button#PART_CloseButton">
      <Setter Property="IsVisible" Value="True"/>
      <Setter Property="Grid.Column" Value="0" />
      <Setter Property="Grid.ColumnSpan" Value="2" />
      <Setter Property="Margin" Value="0 0 4 0" />
    </Style>
    <Style Selector="^:primary:secondary /template/ Button#PART_SecondaryButton">
      <Setter Property="IsVisible" Value="True"/>
      <Setter Property="Grid.Column" Value="2" />
      <Setter Property="Grid.ColumnSpan" Value="2" />
      <Setter Property="Margin" Value="4 0 0 0" />
    </Style>
    <Style Selector="^:primary:secondary:primary-first /template/ Button#PART_CloseButton,
                     ^:primary:secondary:not(:primary-first) /template/ Button#PART_PrimaryButton">
      <Setter Property="IsVisible" Value="False"/>
    </Style>

    <!-- Primary and Close Buttons -->
    <Style Selector="^:primary:close:primary-first /template/ Button#PART_PrimaryButton,
                     ^:primary:close:not(:primary-first) /template/ Button#PART_CloseButton">
      <Setter Property="IsVisible" Value="True"/>
      <Setter Property="Grid.Column" Value="0" />
      <Setter Property="Grid.ColumnSpan" Value="2" />
      <Setter Property="Margin" Value="0 0 4 0" />
    </Style>
    <Style Selector="^:primary:close /template/ Button#PART_SecondaryButton">
      <Setter Property="IsVisible" Value="False"/>
    </Style>
    <Style Selector="^:primary:close:primary-first /template/ Button#PART_CloseButton,
                     ^:primary:close:not(:primary-first) /template/ Button#PART_PrimaryButton">
      <Setter Property="IsVisible" Value="True"/>
      <Setter Property="Grid.Column" Value="2" />
      <Setter Property="Grid.ColumnSpan" Value="2" />
      <Setter Property="Margin" Value="4 0 0 0" />
    </Style>
    
    <!-- Primary and Secondary Buttons -->
    <Style Selector="^:primary:secondary:primary-first /template/ Button#PART_PrimaryButton,
                     ^:primary:secondary:not(:primary-first) /template/ Button#PART_SecondaryButton">
      <Setter Property="IsVisible" Value="True"/>
      <Setter Property="Grid.Column" Value="0" />
      <Setter Property="Grid.ColumnSpan" Value="2" />
      <Setter Property="Margin" Value="0 0 4 0" />
    </Style>
    <Style Selector="^:primary:secondary /template/ Button#PART_CloseButton">
      <Setter Property="IsVisible" Value="False"/>
    </Style>
    <Style Selector="^:primary:secondary:primary-first /template/ Button#PART_SecondaryButton,
                     ^:primary:secondary:not(:primary-first) /template/ Button#PART_PrimaryButton">
      <Setter Property="IsVisible" Value="True"/>
      <Setter Property="Grid.Column" Value="2" />
      <Setter Property="Grid.ColumnSpan" Value="2" />
    </Style>

    <!-- Secondary and Close Buttons -->
    <Style Selector="^:secondary:close:primary-first /template/ Button#PART_SecondaryButton,
                     ^:secondary:close:not(:primary-first) /template/ Button#PART_CloseButton">
      <Setter Property="IsVisible" Value="True"/>
      <Setter Property="Grid.Column" Value="0" />
      <Setter Property="Grid.ColumnSpan" Value="2" />
      <Setter Property="Margin" Value="0 0 4 0" />
    </Style>
    <Style Selector="^:secondary:close /template/ Button#PART_PrimaryButton">
      <Setter Property="IsVisible" Value="False"/>
    </Style>
    <Style Selector="^:secondary:close:primary-first /template/ Button#PART_CloseButton,
                     ^:secondary:close:not(:primary-first) /template/ Button#PART_SecondaryButton">
      <Setter Property="IsVisible" Value="True"/>
      <Setter Property="Grid.Column" Value="2" />
      <Setter Property="Grid.ColumnSpan" Value="2" />
      <Setter Property="Margin" Value="4 0 0 0" />
    </Style>


    <!-- All Buttons -->
    <Style Selector="^:primary:secondary:close:primary-first /template/ Button#PART_PrimaryButton,
                     ^:primary:secondary:close:not(:primary-first) /template/ Button#PART_CloseButton">
      <Setter Property="IsVisible" Value="True"/>
      <Setter Property="Grid.Column" Value="0" />
      <Setter Property="Grid.ColumnSpan" Value="1" />
      <Setter Property="Margin" Value="0 0 4 0" />
    </Style>
    <Style Selector="^:primary:secondary:close /template/ Button#PART_SecondaryButton">
      <Setter Property="IsVisible" Value="True"/>
      <Setter Property="Grid.Column" Value="1" />
      <Setter Property="Grid.ColumnSpan" Value="2" />
      <Setter Property="Margin" Value="4 0 4 0" />
    </Style>
    <Style Selector="^:primary:secondary:close:primary-first /template/ Button#PART_CloseButton,
                     ^:primary:secondary:close:not(:primary-first) /template/ Button#PART_PrimaryButton">
      <Setter Property="IsVisible" Value="True"/>
      <Setter Property="Grid.Column" Value="3" />
      <Setter Property="Grid.ColumnSpan" Value="1" />
      <Setter Property="Margin" Value="4 0 0 0" />
    </Style>
  </ControlTheme>

</ResourceDictionary>
